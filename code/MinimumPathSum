/*
  https://leetcode.com/problems/minimum-path-sum/
*/

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        if(grid.size() == 0 || grid[0].size() == 0 ) return 0;
        int rows = grid.size();
        int columns = grid[0].size();
        for(int i = 1;i<rows;i++){
            grid[i][0] += grid[i-1][0];
        }
        for(int j = 1;j<columns;j++){
            grid[0][j] += grid[0][j-1];
        }
        for(int i = 1;i<rows;i++)
            for(int j = 1;j<columns;j++){
                grid[i][j] += min(grid[i-1][j], grid[i][j-1]);
            }
        return grid[rows-1][columns-1];
        
    }
};
